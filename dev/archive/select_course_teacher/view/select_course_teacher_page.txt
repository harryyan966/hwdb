import 'package:client_tools/client_tools.dart';
import 'package:flutter/material.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:hw_dashboard/l10n/l10n.dart';
import 'package:hw_dashboard/select_course_teacher/select_course_teacher.dart';
import 'package:hw_dashboard/user_search/user_search.dart';
import 'package:tools/tools.dart';

class SelectCourseTeacherPage extends StatelessWidget {
  const SelectCourseTeacherPage({required this.courseInfo, super.key});
  final CourseInfo courseInfo;

  static Route<User> route({required CourseInfo courseInfo}) =>
      MaterialPageRoute(builder: (_) => SelectCourseTeacherPage(courseInfo: courseInfo));

  @override
  Widget build(BuildContext context) {
    return MultiBlocProvider(
      providers: [
        BlocProvider(
          create: (_) => SelectCourseTeacherCubit(
            httpClient: context.read(),
            courseInfo: courseInfo,
          ),
        ),
        BlocProvider(
          create: (context) => UserSearchCubit(
            httpClient: context.read(),
          )..searchUsers('', UserRole.teacher),
        ),
      ],
      child: const SelectTeacherView(),
    );
  }
}

class SelectTeacherView extends StatelessWidget {
  const SelectTeacherView({super.key});

  @override
  Widget build(BuildContext context) {
    final l10n = context.l10n;

    return BlocListener<SelectCourseTeacherCubit, SelectCourseTeacherState>(
      listenWhen: (previous, current) => current.event == Events.updatedCourseInfo,
      listener: (context, state) {
        context.nav.pop(state.newTeacher);
      },
      child: Scaffold(
        appBar: AppBar(
          title: Text(l10n.pageTitle_SelectTeacher),
        ),
        body: const Column(
          children: [
            TeacherSearchBar(),
            SelectableTeacherList(),
          ],
        ),
      ),
    );
  }
}
